{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\next_project\\\\shovan\\\\shovan\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      adress: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MeetupDetails;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/next_project/shovan/shovan/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,2BAAK,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AAA6C,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAArE;AAA4E,MAAA,MAAM,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAArG;AAA8G,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAA5I;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAMA,eAAeN,aAAf;AAEA,OAAO,eAAeO,cAAf,GACP;AACE,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAApB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAW;AAC3BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADmB,KAAX,CAAZ;AAFF,GAAN;AAMD;AAID,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EACP;AACE,QAAMH,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AAEA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAChB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAd,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAM;AACJhB,IAAAA,KAAK,EAAC;AACJC,MAAAA,UAAU,EAAC;AACT2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADK;AAETpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFb;AAGTC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHf;AAITF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJb;AAKTG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALnB;AADP;AADF,GAAN;AAWD","sourcesContent":["import React from 'react'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport {MongoClient,ObjectId} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <div><MeetupDetail image={props.meetupData.image} title={props.meetupData.title} adress={props.meetupData.address} description={props.meetupData.description}/></div>\r\n  )\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\nexport async function getStaticPaths()\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map((meetup)=>({\r\n      params: {meetupId: meetup._id.toString()}\r\n    }))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context)\r\n{\r\n  const meetupId=context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup=meetupsCollection.findOne({_id: ObjectId(meetupId)})\r\n  client.close()\r\n  return{\r\n    props:{\r\n      meetupData:{\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}