{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\next_project\\\\shovan\\\\shovan\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        title: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n        image: props.meetupData.image,\n        title: props.meetupData.title,\n        adress: props.meetupData.address,\n        description: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport default MeetupDetails;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/next_project/shovan/shovan/pages/[meetupId]/index.js"],"names":["React","head","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","meetitle","meetupData","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAoBC,QAApB,QAAmC,SAAnC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,4BACA;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAA,6BAAK,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAAtC;AAA6C,QAAA,KAAK,EAAEJ,KAAK,CAACE,UAAN,CAAiBC,KAArE;AAA4E,QAAA,MAAM,EAAEH,KAAK,CAACE,UAAN,CAAiBG,OAArG;AAA8G,QAAA,WAAW,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAA5I;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AASD,CAVD;;AAYA,eAAeP,aAAf;AAEA,OAAO,eAAeQ,cAAf,GACP;AACE,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAApB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAW;AAC3BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADmB,KAAX,CAAZ;AAFF,GAAN;AAMD;AAID,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EACP;AACE,QAAMH,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAGAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACJjB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADM;AAEVrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFZ;AAGVE,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAHd;AAIVD,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAJZ;AAKVE,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALlB;AADP;AADH,GAAN;AAWD","sourcesContent":["import React from 'react'\r\nimport head from 'next/head'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport {MongoClient,ObjectId} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <>\r\n    <head>\r\n      <title>{props.meetitle}</title>\r\n      <meta name='description' title={props.meetupData.title}/>\r\n    </head>\r\n    <div><MeetupDetail image={props.meetupData.image} title={props.meetupData.title} adress={props.meetupData.address} description={props.meetupData.description}/></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\nexport async function getStaticPaths()\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map((meetup)=>({\r\n      params: {meetupId: meetup._id.toString()}\r\n    }))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context)\r\n{\r\n  const meetupId=context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close()\r\n\r\n  return{\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}