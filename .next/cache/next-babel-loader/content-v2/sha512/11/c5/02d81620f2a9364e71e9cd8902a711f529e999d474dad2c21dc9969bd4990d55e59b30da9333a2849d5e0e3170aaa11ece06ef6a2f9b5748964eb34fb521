{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\next_project\\\\shovan\\\\shovan\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: 'https://images.unsplash.com/photo-1586373227065-c97f4f1785ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGtvbGthdGF8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\n      title: 'This is Shovan Meet Up',\n      adress: 'Kolkata 700 001',\n      description: 'this is mett ok '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MeetupDetails;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://images.unsplash.com/photo-1586373227065-c97f4f1785ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGtvbGthdGF8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\n        title: 'This is Shovan Meet Up',\n        adress: 'Hooghly West Bengal',\n        description: 'This is description'\n      }\n    }\n  };\n}","map":{"version":3,"sources":["D:/next_project/shovan/shovan/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","id","image","title","adress","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE;AAAA,2BAAK,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,uKAArB;AAA8L,MAAA,KAAK,EAAE,wBAArM;AAA+N,MAAA,MAAM,EAAE,iBAAvO;AAA0P,MAAA,WAAW,EAAE;AAAvQ;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAMA,eAAeA,aAAf;AAEA,OAAO,eAAeC,cAAf,GACP;AACE,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAApB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAW;AAC3BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADmB,KAAX,CAAZ;AAFF,GAAN;AAMD;AAID,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EACP;AACE,QAAMlB,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMW,QAAQ,GAACG,OAAO,CAACJ,MAAR,CAAeC,QAA9B;AACA,SAAM;AACJI,IAAAA,KAAK,EAAC;AACJC,MAAAA,UAAU,EAAC;AACTC,QAAAA,EAAE,EAACN,QADM;AAETO,QAAAA,KAAK,EAAC,uKAFG;AAGTC,QAAAA,KAAK,EAAC,wBAHG;AAITC,QAAAA,MAAM,EAAC,qBAJE;AAKTC,QAAAA,WAAW,EAAC;AALH;AADP;AADF,GAAN;AAWD","sourcesContent":["import React from 'react'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport {MongoClient} from 'mongodb'\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <div><MeetupDetail image={'https://images.unsplash.com/photo-1586373227065-c97f4f1785ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGtvbGthdGF8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60'} title={'This is Shovan Meet Up'} adress={'Kolkata 700 001'} description={'this is mett ok '}/></div>\r\n  )\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\nexport async function getStaticPaths()\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map((meetup)=>({\r\n      params: {meetupId: meetup._id.toString()}\r\n    }))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context)\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const meetupId=context.params.meetupId;\r\n  return{\r\n    props:{\r\n      meetupData:{\r\n        id:meetupId,\r\n        image:'https://images.unsplash.com/photo-1586373227065-c97f4f1785ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fGtvbGthdGF8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60',\r\n        title:'This is Shovan Meet Up',\r\n        adress:'Hooghly West Bengal',\r\n        description:'This is description'\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}