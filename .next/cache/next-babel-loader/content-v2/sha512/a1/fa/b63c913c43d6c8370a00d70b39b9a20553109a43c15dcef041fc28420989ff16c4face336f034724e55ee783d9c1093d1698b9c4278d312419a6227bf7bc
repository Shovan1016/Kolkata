{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\next_project\\\\shovan\\\\shovan\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.image,\n      title: props.title,\n      adress: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MeetupDetails;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = meetupsCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}","map":{"version":3,"sources":["D:/next_project/shovan/shovan/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","findOne","_id","ObjectId","meetupId","close","fallback","paths","map","meetup","params","toString","getStaticProps","context","selectedMeetup","meetupData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,2BAAK,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,KAA3B;AAAkC,MAAA,KAAK,EAAED,KAAK,CAACE,KAA/C;AAAsD,MAAA,MAAM,EAAEF,KAAK,CAACG,OAApE;AAA6E,MAAA,WAAW,EAAEH,KAAK,CAACI;AAAhG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;AAMA,eAAeL,aAAf;AAEA,OAAO,eAAeM,cAAf,GACP;AACE,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAEC,QAAQ,CAACC,QAAD;AAAf,GAA1B,CAApB;AACAT,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAACP,OAAO,CAACQ,GAAR,CAAaC,MAAD,KAAW;AAC3BC,MAAAA,MAAM,EAAE;AAACN,QAAAA,QAAQ,EAAEK,MAAM,CAACP,GAAP,CAAWS,QAAX;AAAX;AADmB,KAAX,CAAZ;AAFF,GAAN;AAMD;AAID,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EACP;AACE,QAAMT,QAAQ,GAACS,OAAO,CAACH,MAAR,CAAeN,QAA9B;AAEA,QAAMT,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,uFADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAChB,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAACE;AAAL,GAA1B,CAArB;AAGA,SAAM;AACJf,IAAAA,KAAK,EAAC;AACJ0B,MAAAA,UAAU,EAACD;AADP;AADF,GAAN;AAKD","sourcesContent":["import React from 'react'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport {MongoClient} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <div><MeetupDetail image={props.image} title={props.title} adress={props.address} description={props.description}/></div>\r\n  )\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\nexport async function getStaticPaths()\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups=await meetupsCollection.findOne({ _id: ObjectId(meetupId)});\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map((meetup)=>({\r\n      params: {meetupId: meetup._id.toString()}\r\n    }))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context)\r\n{\r\n  const meetupId=context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup=meetupsCollection.findOne({_id:meetupId})\r\n\r\n\r\n  return{\r\n    props:{\r\n      meetupData:selectedMeetup\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}