{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\next_project\\\\shovan\\\\shovan\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"head\", {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n        image: props.meetupData.image,\n        title: props.meetupData.title,\n        adress: props.meetupData.address,\n        description: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/next_project/shovan/shovan/pages/[meetupId]/index.js"],"names":["React","head","MeetupDetail","MeetupDetails","props","meetupData","title","image","address","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE;AAAA,4BACA;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBC;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAKA;AAAA,6BAAK,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAAtC;AAA6C,QAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAArE;AAA4E,QAAA,MAAM,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAArG;AAA8G,QAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAA5I;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,aALA;AAAA,kBADF;AASD,CAVD;;KAAMN,a;;AAYN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport head from 'next/head'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\nimport {MongoClient,ObjectId} from 'mongodb'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <>\r\n    <head>\r\n      <title>{props.meetupData.title}</title>\r\n      <meta name='description' content={props.meetupData.title}/>\r\n    </head>\r\n    <div><MeetupDetail image={props.meetupData.image} title={props.meetupData.title} adress={props.meetupData.address} description={props.meetupData.description}/></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MeetupDetails\r\n\r\nexport async function getStaticPaths()\r\n{\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups=await meetupsCollection.find({},{_id:1}).toArray();\r\n  client.close();\r\n\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map((meetup)=>({\r\n      params: {meetupId: meetup._id.toString()}\r\n    }))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context)\r\n{\r\n  const meetupId=context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://shovan:shovan@cluster0.btlavhe.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close()\r\n\r\n  return{\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}